{"ast":null,"code":"import _objectSpread from \"/Users/cazaustre/code/src/github.com/carlosazaustre/fullstack-course-helsinki/part2/notes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/cazaustre/code/src/github.com/carlosazaustre/fullstack-course-helsinki/part2/notes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cazaustre/code/src/github.com/carlosazaustre/fullstack-course-helsinki/part2/notes/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport noteService from './services/notes';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note...'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const _useState7 = useState('some error happened...'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorMessage = _useState8[0],\n        setErrorMessage = _useState8[1];\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportantOf = id => {\n    const note = notes.find(n => n.id === id);\n\n    const changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      alert(\"the note '\".concat(note.content, \"' was already deleted from server\"));\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportantOf(note.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/cazaustre/code/src/github.com/carlosazaustre/fullstack-course-helsinki/part2/notes/src/App.js"],"names":["React","useState","useEffect","noteService","Note","Notification","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","toggleImportantOf","id","note","find","n","changedNote","important","update","returnedNote","map","catch","error","alert","content","filter","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","create","concat","notesToShow","rows","handleNoteChange","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport noteService from './services/notes'\nimport Note from './components/Note';\nimport Notification from './components/Notification';\n\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('some error happened...');\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      });\n  }, []);\n  \n  const toggleImportantOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n      })\n      .catch(error => {\n        alert(`the note '${note.content}' was already deleted from server`);\n        setNotes(notes.filter(n => n.id !== id))\n      });\n  }\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n      });\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true);\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportantOf(note.id)}\n    />\n  );\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}  \n        />\n        <button type='submit'>save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}